{"mappings":"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","sources":["src/devices/src/store.js","src/devices/src/effects.js","src/devices/src/hDevice.js","src/devices/src/hContent.js","src/devices/src/initApp.js","src/devices/main.js"],"sourcesContent":["\n// Simple store for state management\nclass Store {\n\n  classList = {\n    mobile: [\"mobile\", \"mobile-device\", \"mobile-iframe\"],\n    tablet: [\"tablet\", \"tablet-device\", \"tablet-iframe\"],\n    laptop: [\"laptop\", \"laptop-device\", \"laptop-iframe\"],\n    desktop: [\"desktop\", \"desktop-device\", \"desktop-iframe\"]\n  }\n\n  contentPath = {\n    frost: \"../../frost/index.html\",\n    magazine: \"../../magazine/index.html\",\n    java: \"../../java/index.html\",\n    guitars:  \"../../guitars/index.html\",\n    // frost: new URL(\"../../frost/index.html\"  ,import.meta.url).href,\n    // magazine: new URL(\"../../magazine/index.html\"  ,import.meta.url).href,\n    // java: new URL(\"../../java/index.html\"  ,import.meta.url).href,\n    // guitars:  new URL(\"../../guitars/index.html\"  ,import.meta.url).href,\n    open: \"\",\n  };\n\n  constructor() {\n    this.device = \"mobile\";\n    this.theme = \"frost\"\n    this.hasFrame = true;\n  }\n\n  getDevice() {\n    return this.device;\n  }\n\n  setDevice(device) {\n    return this.device = device;\n  }\n\n  getTheme() {\n    return this.theme;\n  }\n\n  setTheme(theme) {\n    return this.theme = theme;\n  }\n  \n  getFrame() {\n    return this.hasFrame;\n  }\n\n  toggleFrame() {\n    return this.hasFrame = !this.hasFrame;\n  }\n\n  deviceOptions(device) {\n    return this.classList[device];\n  }\n\n  getContentPath() {\n    return this.contentPath[this.theme];\n  }\n\n  getCurrentDeviceClass() {\n    return this.classList[this.device][1];\n  }\n}\n\nconst store = new Store();\n\nexport default store;","\n/* \n\t\tHanders for transitions and side effects\n*/\n\nimport store from \"./store.js\";\nimport handleDevice from \"./hDevice.js\";\n\n// DOM \nconst overlay = document.querySelector(\".overlay\");\nconst iframe = document.querySelector(\"iframe\");\n\n// opens a new window\nexport function openWindow(path) {\n\twindow.open(path, \"_blank\");\n}\n\n// handle css transition effects\nexport function transition() {\n\toverlay.classList.toggle(\"active-overlay\");\n\toverlay.ontransitionend = () => overlay.classList.remove(\"active-overlay\");\n\toverlay.ontransistioncancel = () => overlay.classList.remove(\"active-overlay\");\n}\n\n// scroll to top of iframe\nexport function scrollToTop() {\n\tiframe.contentWindow.scrollTo({\n\t\ttop: 0,\n\t\tleft: 0,\n\t\tbehavior: \"smooth\",\n\t});\n}\n\n// toggle device frame visibility ON/OFF\nexport function toggleFrame() {\n\tconst currentDeviceClass = store.getCurrentDeviceClass();\n\tconst currentDeviceElement = document.querySelector(`.${currentDeviceClass}`);\n\tstore.toggleFrame();\n\tcurrentDeviceElement.classList.toggle(\"active\");\n}\n\n// handle special case when user resizes the screen manually\nexport function toMobile(e) {\n\tif (e.matches) {\n\t\thandleDevice(e, true); // change device format to mobile\n\t}\n}\n","\n/* \n\tThis handler is responsible for toggling devices.\n\t\t- get and set device state to store\n\t\t- update DOM accordingly\n\t\t- call side effects\n*/\n\nimport store from \"./store.js\";\nimport { openWindow, transition, scrollToTop } from \"./effects.js\";\n\nconst device = document.querySelector(\"#device-section\");\nconst devices = document.querySelectorAll(\".container .devices\");\nconst iframe = document.querySelector(\"iframe\");\n\nfunction handleDevice(e, mobile = false) {\n\n\t// open wireframes\n\tif (e.target.id === \"wireframe\") return openWindow(\"../wireframe\", \"_blank\");\n\n\t// get and set state\n\tconst currentDevice = store.getDevice();\n\tconst replaceDevice = mobile ? \"mobile\" : e.currentTarget.id;\n\tconst currentClassList = store.deviceOptions(currentDevice);\n\tconst replaceClassList = store.deviceOptions(replaceDevice);\n\n\t// update DOM accordingly\n\tdevices.forEach((device) => {\n\t\tconst isCurrentDevice = device.classList.contains(replaceClassList[1]);\n\t\tconst hasActiveFrame = store.getFrame();\n\n\t\tif (isCurrentDevice) {\n\t\t\tdevice.style.display = \"block\";\n\t\t\thasActiveFrame && device.classList.add(\"active\");\n\t\t} else {\n\t\t\tdevice.classList.remove(\"active\");\n\t\t\tdevice.style.display = \"none\";\n\t\t}\n\t});\n\n\t// toggle classes\n\tdevice.classList.replace(currentClassList[0], replaceClassList[0]);\n\tiframe.classList.replace(currentClassList[2], replaceClassList[2]);\n\n\t// set store and call side effects\n\tstore.setDevice(replaceDevice);\n\ttransition();\n\tscrollToTop();\n}\n\nexport default handleDevice;","\n/* \n\tThis handler is responsible for toggling content / websites.\n\t\t- get and set state to store\n\t\t- update DOM accordingly\n\t\t- call side effects\n*/\n\nimport store from \"./store.js\";\nimport { openWindow, transition } from \"./effects.js\";\n\nconst iframe = document.querySelector(\"iframe\");\n\nfunction handleContent(e) {\n\te.preventDefault();\n\n\t// get theme from button id\n\tconst theme = e.currentTarget.id;\n\n\t// open website to a new window\n\tif (theme === \"open\") return openWindow(store.getContentPath());\n\n\t// store state and call side effects\n\tstore.setTheme(theme);\n\tconsole.log(store.getContentPath());\n  iframe.src = store.getContentPath(); // order matters\n\ttransition();\n}\n\nexport default handleContent;","\nimport store from \"./store.js\";\nimport handleDevice from \"./hDevice.js\";\nimport handleContent from \"./hContent.js\";\nimport { toggleFrame, toMobile } from \"./effects.js\";\n\n// Grabbing DOM elements\nconst device = document.querySelector(\"#device-section\");\nconst devices = document.querySelectorAll(\".device:is(button):not(#toggle-frame)\");\nconst contents = document.querySelectorAll(\".content:is(button)\");\nconst toggle = document.querySelector(\"#toggle-frame\");\nconst iframe = document.querySelector(\"iframe\");\nconst container = document.querySelector(\".container\");\n\nfunction initApp() {\n\n\t// set initial device (mobile)\n\tconst options = store.deviceOptions(\"mobile\");\n\tdevice.classList.add(options[0]);\n\tiframe.classList.add(options[2]);\n\tcontainer.style.opacity = 1;\n\n\t// set initial content\n\tconsole.log(store.getContentPath());\n\tiframe.src = store.getContentPath();\n\n\t// add click to the buttons\n\ttoggle.addEventListener(\"click\", toggleFrame); // toggle device visibility ON/OFF\n\tdevices.forEach((b) => b.addEventListener(\"click\", handleDevice));    // device buttons\n\tcontents.forEach((b) => b.addEventListener(\"click\", handleContent));  // content buttons\n\n\t// media query for the special case when user resizes the screen manually\n\tconst mediaQuery = window.matchMedia(\"(max-width: 768px)\");\n\tmediaQuery.addEventListener(\"change\", toMobile);\n}\n\nexport default initApp;\n\n","\n// import '../frost/index.html';\n// import '../magazine/index.html';\n// import '../java/index.html';\n// import '../guitars/index.html';\n// import '../wireframe/index.html';\n\nimport initApp from \"./src/initApp.js\";\n\n// initialize onload \ndocument.addEventListener(\"DOMContentLoaded\", initApp);\n"],"names":["$0ac6e197edd1ee24$export$2e2bcd8739ae039","classList","mobile","tablet","laptop","desktop","contentPath","frost","magazine","java","guitars","open","constructor","this","device","theme","hasFrame","getDevice","setDevice","getTheme","setTheme","getFrame","toggleFrame","deviceOptions","getContentPath","getCurrentDeviceClass","$14497a105535d555$var$overlay","document","querySelector","$14497a105535d555$var$iframe","$14497a105535d555$export$e5968930f07b8990","path","window","$14497a105535d555$export$66bb15e2994e6a26","toggle","ontransitionend","remove","ontransistioncancel","$14497a105535d555$export$6f1b9170f42f38","currentDeviceClass","currentDeviceElement","$14497a105535d555$export$20561498b67c43a0","e","matches","$e0b7c672447f889e$export$2e2bcd8739ae039","$e0b7c672447f889e$var$device","$e0b7c672447f889e$var$devices","querySelectorAll","$e0b7c672447f889e$var$iframe","target","id","currentDevice","replaceDevice","currentTarget","currentClassList","replaceClassList","forEach","isCurrentDevice","contains","hasActiveFrame","style","display","add","replace","contentWindow","scrollTo","top","left","behavior","$1b0915a35c7baf03$var$iframe","$1b0915a35c7baf03$export$2e2bcd8739ae039","preventDefault","console","log","src","$12c4d5339f8c91e7$var$device","$12c4d5339f8c91e7$var$devices","$12c4d5339f8c91e7$var$contents","$12c4d5339f8c91e7$var$toggle","$12c4d5339f8c91e7$var$iframe","$12c4d5339f8c91e7$var$container","$12c4d5339f8c91e7$export$2e2bcd8739ae039","options","opacity","addEventListener","b","matchMedia"],"version":3,"file":"index.20a847e6.js.map"}